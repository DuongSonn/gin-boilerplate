package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	"fmt"
	"oauth-server/app/entity"
	"oauth-server/graphql/generated"
	"time"
)

// CreatedAt is the resolver for the created_at field.
func (r *userResolver) CreatedAt(ctx context.Context, obj *entity.User) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - created_at"))
}

// UpdatedAt is the resolver for the updated_at field.
func (r *userResolver) UpdatedAt(ctx context.Context, obj *entity.User) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updated_at"))
}

// OAuths is the resolver for the o_auths field.
func (r *userResolver) OAuths(ctx context.Context, obj *entity.User) ([]*entity.OAuth, error) {
	panic(fmt.Errorf("not implemented: OAuths - o_auths"))
}

// User returns generated.UserResolver implementation.
func (r *Resolver) User() generated.UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
